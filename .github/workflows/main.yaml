name: workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  build-and-push-ecr-image:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          IMAGE_TAG: latest
          REPO_NAME: rag
          AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          echo "Fetching AWS Account ID..."
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)

          ECR_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME"
          echo "ECR URI: $ECR_URI"

          echo "Ensuring ECR repository exists..."
          aws ecr describe-repositories --repository-names "$REPO_NAME" --region "$AWS_REGION" >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name "$REPO_NAME" --region "$AWS_REGION"

          echo "Building Docker image..."
          docker build -t $ECR_URI:$IMAGE_TAG .

          echo "Pushing Docker image..."
          docker push $ECR_URI:$IMAGE_TAG
